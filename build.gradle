plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'org.jetbrains.kotlin.jvm' version '1.7.0'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version project.mod_version
group project.mod_group

loom {
    accessWidenerPath = file('src/main/resources/transrights.accesswidener')
}

compileKotlin.kotlinOptions.jvmTarget = compileTestKotlin.kotlinOptions.jvmTarget = '17'

tasks.withType(JavaCompile).configureEach {
    it.options.release.set 17
    it.options.encoding 'UTF-8'
}

java {
    withSourcesJar()

    withJavadocJar()
}

repositories {
    mavenCentral()
}

dependencies {
    var apiModules = [
            'fabric-api-base',
            'fabric-command-api-v2',
    ]

    // fabric dependencies
    minecraft "com.mojang:minecraft:$minecraft_version"
    mappings "net.fabricmc:yarn:$minecraft_version+$yarn_mappings:v2"
    modImplementation 'net.fabricmc:fabric-loader:0.14.8'

    // mod dependencies
    include modImplementation('org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.3') {
        exclude module: 'kotlin-stdlib-jdk8'
        exclude module: 'kotlin-stdlib-common'
    }

    include modImplementation('org.jetbrains.kotlin:kotlin-reflect:1.7.0') {
        exclude module: 'kotlin-stdlib'
    }

    include modImplementation('org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.7.0') {
        exclude module: 'kotlin-stdlib-common'
        exclude module: 'annotations'
    }

    apiModules.forEach {
        include modImplementation(fabricApi.module(it, "0.57.0+$minecraft_version")) { transitive = false }
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

jar {
    from('LICENSE') {
        rename {
            "${it}_$archivesBaseName"
        }
    }

    manifest.attributes('Main-Class': 'trans.rights.Main')
}
