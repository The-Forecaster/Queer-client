plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'org.jetbrains.kotlin.jvm' version '1.5.32'
}

sourceCompatibility = targetCompatibility =  JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

dependencies {
	Set<String> apiModules = [
		"fabric-api-base"
	]

	Set<String> libraries = [
		"club.minnced:discord-webhooks:${project.discord_webhooks_version}"
	]

	def includeImpl = { id ->
		include(implementation(id))
	}

	def includeModImpl = { id -> 
		include(modImplementation(fabricApi.module(id, "${project.fabric_version}")))
	}

	// fabric dependencies
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// api dependencies
	apiModules.forEach {
		includeModImpl(it)
	}
	// TR dependencies
	libraries.forEach {
		includeImpl(it)
	}
}

jar {
	manifest {
		attributes(
			'Main-Class': 'me.austin.queer.Main',
			'Implementation-Title': project.archives_base_name,
            'Implementation-Version': project.version
		)
	}
}

processResources {
	inputs.property "version", project.mod_version

	filesMatching("fabric.mod.json") {
		expand "name": project.archives_base_name
		expand "version": project.mod_version
	}
}

java {
	withSourcesJar()
}

task {
	withType(JavaCompile).configureEach {
		it.options.release.set(17)
    }

    withType(KotlinCompile).configureEach {
		it.options.release.set(17)
        kotlinOptions {
            jvmTarget = 17
        }
    }
}
