plugins {
    id 'fabric-loom' version '0.11-SNAPSHOT'
    id 'org.jetbrains.kotlin.jvm' version '1.6.20'
}

sourceCompatibility = targetCompatibility = project.java_version

archivesBaseName = project.archives_base_name
version project.mod_version
group project.mod_group

loom.accessWidenerPath = file('src/main/resources/transrights.accesswidener')
compileKotlin.kotlinOptions.jvmTarget = compileTestKotlin.kotlinOptions.jvmTarget = project.java_version as String

tasks.withType(JavaCompile).configureEach {
    it.options.release.set(17)
}

java {
    withSourcesJar()

    withJavadocJar()
}

repositories {
    mavenCentral()
}

dependencies {

    // fabric dependencies
    minecraft "com.mojang:minecraft:$project.minecraft_version"
    mappings "net.fabricmc:yarn:$project.minecraft_version+$project.yarn_mappings:v2"
    modImplementation 'net.fabricmc:fabric-loader:0.13.3'

    include(modImplementation('org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1'))
    include(modImplementation('org.jetbrains.kotlin:kotlin-reflect:1.6.20'))
}

processResources {
    inputs.property 'version', project.version

    filesMatching('fabric.mod.json') {
        expand 'version': project.mod_version
    }
}

jar {
    from('LICENSE') {
        rename {
            "${it}_$project.archivesBaseName"
        }
    }

    manifest {
        attributes('Main-class': 'trans.rights.Main')
    }
}
